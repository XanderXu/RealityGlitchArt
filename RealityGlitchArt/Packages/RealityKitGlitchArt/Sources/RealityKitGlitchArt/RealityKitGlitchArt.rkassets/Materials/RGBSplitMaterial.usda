#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "RGBSplitMaterial"
    {
        float inputs:Amount = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-847.3922, 453.026)
                    int stackingOrderInSubgraph = 1626
                }
            }
        )
        float2 inputs:AmountB = (1, 0) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-824.04626, -8.136633)
                    int stackingOrderInSubgraph = 1627
                }
            }
        )
        float2 inputs:AmountR = (1, 0) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-824.816, -110.07785)
                    int stackingOrderInSubgraph = 1627
                }
            }
        )
        float inputs:CenterFading = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-843.39886, 289.5359)
                    int stackingOrderInSubgraph = 1626
                }
            }
        )
        asset inputs:ConstantImageFile = @number.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-11.984397, -460.11813)
                }
            }
        )
        float inputs:Fading = 0.5 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-842.64606, 369.76514)
                    int stackingOrderInSubgraph = 1626
                }
            }
        )
        float inputs:Speed = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-847.3788, 529.46893)
                    int stackingOrderInSubgraph = 1626
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/RGBSplitMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/RGBSplitMaterial/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (2042.7584, -205.78235)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1296

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/RGBSplitMaterial/Mix_1.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (1787.7585, -211.28235)
            int ui:nodegraph:node:stackingOrder = 1296
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-844.7153, 598.3839)
            int ui:nodegraph:node:stackingOrder = 1542
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial.inputs:Speed>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-730.7603, 566.92487)
            int ui:nodegraph:node:stackingOrder = 1543
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Multiply.outputs:out>
            float inputs:in2 = 6
            float outputs:out
            float2 ui:nodegraph:node:pos = (-649.2423, 568.5825)
            int ui:nodegraph:node:stackingOrder = 1544
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
        }

        def Shader "Sin"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/RGBSplitMaterial/Multiply_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-531.8303, 570.71045)
            int ui:nodegraph:node:stackingOrder = 1545
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Multiply_1.outputs:out>
            float inputs:in2 = 2
            float outputs:out
            float2 ui:nodegraph:node:pos = (-611.5098, 643.8904)
            int ui:nodegraph:node:stackingOrder = 629
        }

        def Shader "Sin_1"
        {
            uniform token info:id = "ND_sin_float"
            float inputs:in.connect = </Root/RGBSplitMaterial/Multiply_3.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-500.93307, 648.2667)
            int ui:nodegraph:node:stackingOrder = 631
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Remap.outputs:out>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Remap_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-178.73442, 585.87415)
            int ui:nodegraph:node:stackingOrder = 1537
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Multiply_5.outputs:out>
            float inputs:in2 = 3
            float outputs:out
            float2 ui:nodegraph:node:pos = (-37.199684, 564.4601)
            int ui:nodegraph:node:stackingOrder = 1536
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Power.outputs:out>
            float inputs:in2 = 0.05
            float outputs:out
            float2 ui:nodegraph:node:pos = (100.66637, 539.7025)
            int ui:nodegraph:node:stackingOrder = 1535
        }

        def Shader "Multiply_7"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial.inputs:Amount>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_6.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (210.5558, 512.2535)
            int ui:nodegraph:node:stackingOrder = 1534
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial.inputs:Fading>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_7.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (315.0957, 509.07852)
            int ui:nodegraph:node:stackingOrder = 1533
        }

        def Shader "Remap"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/RGBSplitMaterial/Sin.outputs:out>
            float inputs:inhigh
            float inputs:inlow = -1
            float inputs:outhigh
            float inputs:outlow
            float outputs:out
            float2 ui:nodegraph:node:pos = (-338.98654, 527.5767)
            int ui:nodegraph:node:stackingOrder = 525
        }

        def Shader "Remap_1"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/RGBSplitMaterial/Sin_1.outputs:out>
            float inputs:inhigh
            float inputs:inlow = -1
            float inputs:outhigh = 1.5
            float inputs:outlow = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-343.8791, 720.2091)
            int ui:nodegraph:node:stackingOrder = 635
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-811.49786, 169.91075)
            int ui:nodegraph:node:stackingOrder = 1148
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_float"
            float inputs:bg = 1
            float inputs:bg.connect = </Root/RGBSplitMaterial/MTLDistance.outputs:out>
            float inputs:fg = 1
            float inputs:fg.connect = None
            float inputs:mix.connect = </Root/RGBSplitMaterial.inputs:CenterFading>
            float outputs:out
            float2 ui:nodegraph:node:pos = (211.46394, 394.19653)
            int ui:nodegraph:node:stackingOrder = 1531
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:bg"]
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterial/Mix.outputs:out>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_8.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (422.4975, 464.59973)
            int ui:nodegraph:node:stackingOrder = 1541
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/RGBSplitMaterial/UsdUVTexture_1.outputs:r>
            float inputs:in2.connect = </Root/RGBSplitMaterial/UsdUVTexture.outputs:g>
            float inputs:in3.connect = </Root/RGBSplitMaterial/UsdUVTexture_2.outputs:b>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1240.2528, -15.797777)
            int ui:nodegraph:node:stackingOrder = 1622
        }

        def Shader "Mix_1"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/RGBSplitMaterial/Combine3.outputs:out>
            color3f inputs:fg.connect = </Root/RGBSplitMaterial/UsdUVTexture.outputs:rgb>
            float inputs:mix.connect = </Root/RGBSplitMaterial.inputs:Fading>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1596.4241, 12.7678175)
            int ui:nodegraph:node:stackingOrder = 1618
        }

        def Shader "UsdUVTexture"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterial/Texcoord.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (636.0053, -101.99097)
            int ui:nodegraph:node:stackingOrder = 1624
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/RGBSplitMaterial.inputs:AmountR>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (554.1958, -354.73886)
            int ui:nodegraph:node:stackingOrder = 1526
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterial/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_4.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (664.72125, -351.66772)
            int ui:nodegraph:node:stackingOrder = 1524
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterial/Add.outputs:out>
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (895.3025, -362.35272)
            int ui:nodegraph:node:stackingOrder = 1528
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/RGBSplitMaterial.inputs:AmountB>
            float inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (557.9132, 210.99411)
            int ui:nodegraph:node:stackingOrder = 1607
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterial/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterial/Multiply_9.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (634.5685, 179.17377)
            int ui:nodegraph:node:stackingOrder = 1607
        }

        def Shader "UsdUVTexture_2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterial/Subtract.outputs:out>
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (914.2823, 123.98069)
            int ui:nodegraph:node:stackingOrder = 1550
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "MTLDistance"
        {
            uniform token info:id = "ND_MTL_distance_vector2_float"
            float2 inputs:x.connect = </Root/RGBSplitMaterial/Texcoord.outputs:out>
            float2 inputs:y = (0.5, 0.5)
            float outputs:out
            float2 ui:nodegraph:node:pos = (-162.9732, 272.23383)
            int ui:nodegraph:node:stackingOrder = 1632
        }
    }
}

