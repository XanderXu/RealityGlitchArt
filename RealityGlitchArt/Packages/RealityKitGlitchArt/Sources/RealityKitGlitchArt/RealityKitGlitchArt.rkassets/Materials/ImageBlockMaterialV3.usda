#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "ImageBlockMaterialV3"
    {
        reorder nameChildren = ["UsdPreviewSurface", "PreviewSurface", "Time", "RandomNoise_4", "Speed", "Multiply", "Texcoord", "Combine3", "UsdUVTexture", "UsdUVTexture_1", "Multiply_9", "Subtract", "UsdUVTexture_2", "Multiply_4", "Add", "Multiply_5", "Multiply_6", "RandomNoise_1", "RandomNoise_2", "RGBSplitIntensity", "BlockLayer1_Intensity", "Amount", "Fade", "BlockLayer1_UV", "RandomNoise_5", "Power_4", "Multiply_11", "Multiply_12", "Subtract_2", "Combine2", "Mix", "LineNoise"]
        float inputs:Amount = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-917.5831, 234.82942)
                    int stackingOrderInSubgraph = 4626
                }
            }
        )
        float inputs:BlockLayer1_Intensity = 8 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-896.1319, -158.47736)
                    int stackingOrderInSubgraph = 4628
                }
            }
        )
        float2 inputs:BlockLayer1_UV = (4, 16) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-903.6789, -79.3932)
                    int stackingOrderInSubgraph = 4626
                }
            }
        )
        float inputs:Fade = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-892.4779, -413.27115)
                    int stackingOrderInSubgraph = 4626
                }
            }
        )
        float inputs:RGBSplitIntensity = 2 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-901.8016, 397.04462)
                    int stackingOrderInSubgraph = 4628
                }
            }
        )
        float inputs:Speed = 0.5 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-916.9854, 36.121525)
                    int stackingOrderInSubgraph = 4626
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/ImageBlockMaterialV3/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/ImageBlockMaterialV3/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1846.5789, -146.79793)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2275

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/ImageBlockMaterialV3/Mix.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (1591.579, -152.29793)
            int ui:nodegraph:node:stackingOrder = 2275
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-925.118, 121.755806)
            int ui:nodegraph:node:stackingOrder = 4353
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3.inputs:Speed>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-749.748, 77.52829)
            int ui:nodegraph:node:stackingOrder = 4531
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-453.26886, -179.10143)
            int ui:nodegraph:node:stackingOrder = 4601
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/UsdUVTexture_1.outputs:r>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/UsdUVTexture.outputs:g>
            float inputs:in3.connect = </Root/ImageBlockMaterialV3/UsdUVTexture_2.outputs:b>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1181.6313, 1.5849152)
            int ui:nodegraph:node:stackingOrder = 3642
        }

        def Shader "UsdUVTexture"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ImageBlockMaterialV3/Add.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (693.45685, -188.25813)
            int ui:nodegraph:node:stackingOrder = 4624
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ImageBlockMaterialV3/Texcoord.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (918.89264, -392.14685)
            int ui:nodegraph:node:stackingOrder = 4622
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba", "outputs:rgba"]
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/Combine2.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/Multiply_5.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (552.1402, 336.08435)
            int ui:nodegraph:node:stackingOrder = 4059
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/ImageBlockMaterialV3/Multiply_9.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (682.0559, 318.39026)
            int ui:nodegraph:node:stackingOrder = 4059
        }

        def Shader "UsdUVTexture_2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            asset inputs:file = @number.jpeg@
            float2 inputs:st.connect = </Root/ImageBlockMaterialV3/Subtract.outputs:out>
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (900.1655, 190.12778)
            int ui:nodegraph:node:stackingOrder = 3343
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/Combine2.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/Multiply_6.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (387.97186, 52.34304)
            int ui:nodegraph:node:stackingOrder = 4432
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/ImageBlockMaterialV3/Multiply_4.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (493.37207, 35.333233)
            int ui:nodegraph:node:stackingOrder = 4432
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/RandomNoise.outputs:noise>
            float inputs:in2 = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (418.74036, 340.45514)
            int ui:nodegraph:node:stackingOrder = 4248
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/RandomNoise_1.outputs:noise>
            float inputs:in2 = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (269.03735, 54.81604)
            int ui:nodegraph:node:stackingOrder = 4432
        }

        def Shader "Power_4"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/RandomNoise_2.outputs:noise>
            float inputs:in2 = 7.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-245.87648, 305.16904)
            int ui:nodegraph:node:stackingOrder = 4379
        }

        def Shader "Multiply_11"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/Power_4.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3.inputs:RGBSplitIntensity>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-87.31237, 325.68872)
            int ui:nodegraph:node:stackingOrder = 4588
        }

        def Shader "Multiply_12"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/LineNoise.outputs:Power_3_out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3.inputs:Amount>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-110.24895, 197.19035)
            int ui:nodegraph:node:stackingOrder = 4583
        }

        def Shader "Subtract_2"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/Multiply_12.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/Multiply_11.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (28.932795, 231.35541)
            int ui:nodegraph:node:stackingOrder = 4586
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/ImageBlockMaterialV3/Subtract_2.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterialV3/Subtract_2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (232.76884, 227.26013)
            int ui:nodegraph:node:stackingOrder = 4443
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_color3"
            color3f inputs:bg.connect = </Root/ImageBlockMaterialV3/UsdUVTexture_1.outputs:rgb>
            color3f inputs:fg.connect = </Root/ImageBlockMaterialV3/Combine3.outputs:out>
            float inputs:mix = 1
            float inputs:mix.connect = </Root/ImageBlockMaterialV3.inputs:Fade>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1394.2902, -65.9599)
            int ui:nodegraph:node:stackingOrder = 4435
        }

        def NodeGraph "LineNoise"
        {
            float inputs:BlockLayer_Instensity (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (62.484375, 355.21875)
                        int stackingOrderInSubgraph = 4528
                    }
                }
            )
            float inputs:BlockLayer_Instensity.connect = </Root/ImageBlockMaterialV3.inputs:BlockLayer1_Intensity>
            float2 inputs:BlockLayer_UV (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (80.75, 142.5)
                        int stackingOrderInSubgraph = 4527
                    }
                }
            )
            float2 inputs:BlockLayer_UV.connect = </Root/ImageBlockMaterialV3.inputs:BlockLayer1_UV>
            float inputs:Time (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (80.75, 257.5)
                        int stackingOrderInSubgraph = 4528
                    }
                }
            )
            prepend float inputs:Time.connect = </Root/ImageBlockMaterialV3/Multiply.outputs:out>
            float outputs:Power_3_out.connect = </Root/ImageBlockMaterialV3/LineNoise/Power_3.outputs:out>
            float2 ui:nodegraph:node:pos = (-556.71735, 46.728138)
            int ui:nodegraph:node:stackingOrder = 4620
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1133.5, 143.375)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 4526

            def Shader "Floor_3"
            {
                uniform token info:id = "ND_floor_float"
                float inputs:in.connect = </Root/ImageBlockMaterialV3/LineNoise/Multiply_10.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (403.75, 257.5)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "Multiply_10"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/ImageBlockMaterialV3/LineNoise.inputs:Time>
                float inputs:in2 = 30
                float outputs:out
                float2 ui:nodegraph:node:pos = (249.5, 257.5)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "Floor_2"
            {
                uniform token info:id = "ND_floor_vector2"
                float2 inputs:in.connect = </Root/ImageBlockMaterialV3/LineNoise/Multiply_1.outputs:out>
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (403.75, 57.5)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_vector2"
                float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/LineNoise/TextureCoordinates.outputs:out>
                float2 inputs:in2.connect = </Root/ImageBlockMaterialV3/LineNoise.inputs:BlockLayer_UV>
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (249.5, 57.5)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "Multiply_8"
            {
                uniform token info:id = "ND_multiply_vector2FA"
                float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/LineNoise/Floor_2.outputs:out>
                float inputs:in2.connect = </Root/ImageBlockMaterialV3/LineNoise/Floor_3.outputs:out>
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (558, 98.25)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "Power_3"
            {
                uniform token info:id = "ND_power_float"
                float inputs:in1.connect = </Root/ImageBlockMaterialV3/LineNoise/RandomNoise_3.outputs:noise>
                float inputs:in2.connect = </Root/ImageBlockMaterialV3/LineNoise.inputs:BlockLayer_Instensity>
                float outputs:out
                float2 ui:nodegraph:node:pos = (933.25, 143.375)
                int ui:nodegraph:node:stackingOrder = 4524
            }

            def Shader "TextureCoordinates"
            {
                uniform token info:id = "ND_texcoord_vector2"
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (69.48828, 22.605469)
                int ui:nodegraph:node:stackingOrder = 4525
            }

            def "RandomNoise_3" (
                active = true
                instanceable = true
                prepend references = </Root/ImageBlockMaterialV3/RandomNoise>
            )
            {
                float2 inputs:seed.connect = </Root/ImageBlockMaterialV3/LineNoise/Multiply_8.outputs:out>
                float outputs:noise.connect = </Root/ImageBlockMaterialV3/LineNoise/RandomNoise_3/Fractional.outputs:out>
                float2 ui:nodegraph:node:pos = (717.6836, 101.81055)
                int ui:nodegraph:node:stackingOrder = 4627
            }
        }

        def NodeGraph "RandomNoise"
        {
            float2 inputs:seed = (31, 1) (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (77.511444, 43.303406)
                        int stackingOrderInSubgraph = 2672
                    }
                }
            )
            float2 inputs:seed.connect = </Root/ImageBlockMaterialV3/ConstantFloat2.outputs:out>
            float outputs:noise (
                customData = {
                    dictionary realitykit = {
                        int stackingOrderInSubgraph = 2630
                    }
                }
            )
            float outputs:noise.connect = </Root/ImageBlockMaterialV3/RandomNoise/Fractional.outputs:out>
            float2 ui:nodegraph:node:pos = (233.0301, 350.4571)
            int ui:nodegraph:node:stackingOrder = 4603
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:seed"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (908.4146, 51.43164)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2664

            def Shader "Multiply_10"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/ImageBlockMaterialV3/RandomNoise/Sin.outputs:out>
                float inputs:in2 = 43758.547
                float outputs:out
                float2 ui:nodegraph:node:pos = (590.40155, 61.428284)
                int ui:nodegraph:node:stackingOrder = 2664
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector2"
                float2 inputs:in1.connect = </Root/ImageBlockMaterialV3/RandomNoise.inputs:seed>
                float2 inputs:in2.connect = </Root/ImageBlockMaterialV3/RandomNoise/Combine2.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (299.25, 57.5)
                int ui:nodegraph:node:stackingOrder = 2630
            }

            def Shader "Fractional"
            {
                uniform token info:id = "ND_realitykit_fractional_float"
                float inputs:in.connect = </Root/ImageBlockMaterialV3/RandomNoise/Multiply_10.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (738.81683, 61.428284)
                int ui:nodegraph:node:stackingOrder = 2674
            }

            def Shader "Combine2"
            {
                uniform token info:id = "ND_combine2_vector2"
                float inputs:in1 = 17.13
                float inputs:in2 = 3.71
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (81.4158, 113.578125)
                int ui:nodegraph:node:stackingOrder = 2677
            }

            def Shader "Sin"
            {
                uniform token info:id = "ND_sin_float"
                float inputs:in.connect = </Root/ImageBlockMaterialV3/RandomNoise/DotProduct.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (462.96948, 56.369812)
                int ui:nodegraph:node:stackingOrder = 2666
            }
        }

        def Shader "ConstantFloat2"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (31, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (56.7972, 374.0203)
            int ui:nodegraph:node:stackingOrder = 4604
        }

        def Shader "ConstantFloat2_1"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (5, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-125.7973, 5.875847)
            int ui:nodegraph:node:stackingOrder = 4607
        }

        def Shader "ConstantFloat2_2"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (5.14, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-710.28076, 309.4756)
            int ui:nodegraph:node:stackingOrder = 4610
        }

        def "RandomNoise_1" (
            active = true
            instanceable = true
            prepend references = </Root/ImageBlockMaterialV3/RandomNoise>
        )
        {
            float2 inputs:seed.connect = </Root/ImageBlockMaterialV3/ConstantFloat2_1.outputs:out>
            float2 ui:nodegraph:node:pos = (110.822815, 17.849613)
            int ui:nodegraph:node:stackingOrder = 4612
        }

        def "RandomNoise_2" (
            active = true
            instanceable = true
            prepend references = </Root/ImageBlockMaterialV3/RandomNoise>
        )
        {
            float2 inputs:seed.connect = </Root/ImageBlockMaterialV3/ConstantFloat2_2.outputs:out>
            float2 ui:nodegraph:node:pos = (-469.47324, 286.86884)
            int ui:nodegraph:node:stackingOrder = 4626
        }
    }
}

