#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "RGBSplitMaterialV4"
    {
        asset inputs:ConstantImageFile = @number.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-792.7457, -271.08823)
                    int stackingOrderInSubgraph = 2747
                }
            }
        )
        float2 inputs:Direction = (1, 0) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-831.5716, 56.318325)
                    int stackingOrderInSubgraph = 2744
                }
            }
        )
        float inputs:Intensity = 0.05 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-843.3728, 331.67816)
                    int stackingOrderInSubgraph = 2742
                }
            }
        )
        float inputs:Speed = 3 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-837.63434, 574.76166)
                    int stackingOrderInSubgraph = 2742
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/RGBSplitMaterialV4/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/RGBSplitMaterialV4/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1846.5789, -146.79793)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2275

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/RGBSplitMaterialV4/Combine3.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (1591.579, -152.29793)
            int ui:nodegraph:node:stackingOrder = 2275
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-838.1115, 672.20966)
            int ui:nodegraph:node:stackingOrder = 2443
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterialV4.inputs:Speed>
            float inputs:in2.connect = </Root/RGBSplitMaterialV4/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-688.86084, 631.131)
            int ui:nodegraph:node:stackingOrder = 2573
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-811.49786, 169.91075)
            int ui:nodegraph:node:stackingOrder = 1148
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/RGBSplitMaterialV4/UsdUVTexture_1.outputs:r>
            float inputs:in2.connect = </Root/RGBSplitMaterialV4/UsdUVTexture.outputs:g>
            float inputs:in3.connect = </Root/RGBSplitMaterialV4/UsdUVTexture_2.outputs:b>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1229.09, -80.34056)
            int ui:nodegraph:node:stackingOrder = 1312
        }

        def Shader "UsdUVTexture"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterialV4.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV4/Texcoord.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (628.52057, 69.72865)
            int ui:nodegraph:node:stackingOrder = 2460
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV4.inputs:Direction>
            float inputs:in2.connect = </Root/RGBSplitMaterialV4/Multiply_8.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (490.8178, -186.60042)
            int ui:nodegraph:node:stackingOrder = 2458
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV4/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterialV4/Multiply_4.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (733.4959, -187.67902)
            int ui:nodegraph:node:stackingOrder = 2456
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterialV4.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV4/Add.outputs:out>
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (908.71826, -267.44995)
            int ui:nodegraph:node:stackingOrder = 2187
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV4.inputs:Direction>
            float inputs:in2.connect = </Root/RGBSplitMaterialV4/Multiply_8.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (538.451, 396.1826)
            int ui:nodegraph:node:stackingOrder = 2462
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV4/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterialV4/Multiply_9.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (663.32227, 376.18796)
            int ui:nodegraph:node:stackingOrder = 2140
        }

        def Shader "UsdUVTexture_2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/RGBSplitMaterialV4.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV4/Subtract.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (900.1655, 247.57101)
            int ui:nodegraph:node:stackingOrder = 2232
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterialV4.inputs:Intensity>
            float inputs:in2 = 0.001
            float inputs:in2.connect = </Root/RGBSplitMaterialV4/RandomNoise.outputs:Fractional_out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-225.14662, 483.27213)
            int ui:nodegraph:node:stackingOrder = 2712
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/RGBSplitMaterialV4/Multiply.outputs:out>
            float inputs:in2 = 2
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-560.16296, 646.84436)
            int ui:nodegraph:node:stackingOrder = 2708
        }

        def NodeGraph "RandomNoise"
        {
            float2 inputs:seed (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (82, 142.5)
                        int stackingOrderInSubgraph = 3054
                    }
                }
            )
            prepend float2 inputs:seed.connect = </Root/RGBSplitMaterialV4/Combine2.outputs:out>
            prepend float outputs:Fractional_out.connect = </Root/RGBSplitMaterialV4/RandomNoise/Fractional.outputs:out>
            float2 ui:nodegraph:node:pos = (-370.4285, 598.19995)
            int ui:nodegraph:node:stackingOrder = 2745
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1075, 57.5)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 3058

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector2"
                float2 inputs:in1.connect = </Root/RGBSplitMaterialV4/RandomNoise.inputs:seed>
                float2 inputs:in2.connect = </Root/RGBSplitMaterialV4/RandomNoise/Combine22.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (306.25, 57.5)
                int ui:nodegraph:node:stackingOrder = 3052
            }

            def Shader "Fractional"
            {
                uniform token info:id = "ND_realitykit_fractional_float"
                float inputs:in.connect = </Root/RGBSplitMaterialV4/RandomNoise/Multiply_10.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (841, 57.5)
                int ui:nodegraph:node:stackingOrder = 3052
            }

            def Shader "Multiply_10"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/RGBSplitMaterialV4/RandomNoise/Sin.outputs:out>
                float inputs:in2 = 43758.547
                float outputs:out
                float2 ui:nodegraph:node:pos = (654, 57.5)
                int ui:nodegraph:node:stackingOrder = 3052
            }

            def Shader "Sin"
            {
                uniform token info:id = "ND_sin_float"
                float inputs:in.connect = </Root/RGBSplitMaterialV4/RandomNoise/DotProduct.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (507.25, 57.5)
                int ui:nodegraph:node:stackingOrder = 3052
            }

            def Shader "Combine22"
            {
                uniform token info:id = "ND_combine2_vector2"
                float inputs:in1 = 12.9898
                float inputs:in2 = 78.233
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (82, 27.5)
                int ui:nodegraph:node:stackingOrder = 3052
            }
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/RGBSplitMaterialV4> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

