#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "ScreenJumpHMaterial"
    {
        asset inputs:ConstantImageFile = @Texture/number.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (242.9961, 170.91797)
                }
            }
        )
        float inputs:JumpIntensity = 0.35 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-851.5454, 441.3277)
                    int stackingOrderInSubgraph = 3033
                }
            }
        )
        float inputs:Speed = 8 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-847.3788, 529.46893)
                    int stackingOrderInSubgraph = 2951
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/ScreenJumpHMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/ScreenJumpHMaterial/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1277.5038, 511.73022)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 3027

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/ScreenJumpHMaterial/UsdUVTexture_1.outputs:rgb>
            float inputs:metallic
            float inputs:opacity
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (1022.5039, 506.23022)
            int ui:nodegraph:node:stackingOrder = 3027
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-844.7153, 598.3839)
            int ui:nodegraph:node:stackingOrder = 1542
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ScreenJumpHMaterial.inputs:Speed>
            float inputs:in2.connect = </Root/ScreenJumpHMaterial/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-669.9318, 546.22076)
            int ui:nodegraph:node:stackingOrder = 2757
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-840.6583, 284.1583)
            int ui:nodegraph:node:stackingOrder = 2941
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/ScreenJumpHMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ScreenJumpHMaterial/Fractional.outputs:out>
            string inputs:wrapS = "periodic"
            string inputs:wrapT
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (791.7292, 307.51117)
            int ui:nodegraph:node:stackingOrder = 3038
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba", "outputs:rgba"]
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/ScreenJumpHMaterial/Texcoord.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (-634.9748, 331.9371)
            int ui:nodegraph:node:stackingOrder = 2947
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/ScreenJumpHMaterial/Mix.outputs:out>
            float inputs:in2.connect = </Root/ScreenJumpHMaterial/Separate2.outputs:outy>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (216.94586, 525.9011)
            int ui:nodegraph:node:stackingOrder = 3029
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/ScreenJumpHMaterial/Separate2.outputs:outx>
            float inputs:in2.connect = </Root/ScreenJumpHMaterial/Multiply_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-260.79404, 307.44937)
            int ui:nodegraph:node:stackingOrder = 2982
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ScreenJumpHMaterial.inputs:JumpIntensity>
            float inputs:in2.connect = </Root/ScreenJumpHMaterial/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-486.51627, 513.147)
            int ui:nodegraph:node:stackingOrder = 3035
        }

        def Shader "Mix"
        {
            uniform token info:id = "ND_mix_float"
            float inputs:bg.connect = </Root/ScreenJumpHMaterial/Separate2.outputs:outx>
            float inputs:fg.connect = </Root/ScreenJumpHMaterial/Add.outputs:out>
            float inputs:mix.connect = </Root/ScreenJumpHMaterial.inputs:JumpIntensity>
            float outputs:out
            float2 ui:nodegraph:node:pos = (22.740917, 380.29987)
            int ui:nodegraph:node:stackingOrder = 2980
        }

        def Shader "Fractional"
        {
            uniform token info:id = "ND_realitykit_fractional_vector2"
            float2 inputs:in.connect = </Root/ScreenJumpHMaterial/Combine2.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (478.65637, 488.85776)
            int ui:nodegraph:node:stackingOrder = 2978
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/ScreenJumpHMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

