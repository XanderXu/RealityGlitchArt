#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </Root/ImageBlockMaterial> (
        bindMaterialAs = "weakerThanDescendants"
    )

    def Material "ImageBlockMaterial" (
        instanceable = false
    )
    {
        float inputs:BlockSize = 8 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-814.8833, 193.43303)
                    int stackingOrderInSubgraph = 3773
                }
            }
        )
        asset inputs:ConstantImageFile = @Texture/number.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-805.2851, -457.25156)
                    int stackingOrderInSubgraph = 3745
                }
            }
        )
        float inputs:Speed = 10 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-824.9031, 364.11237)
                    int stackingOrderInSubgraph = 3716
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/ImageBlockMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/ImageBlockMaterial/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1968.5913, 81.56025)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 3774

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/ImageBlockMaterial/Combine3.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (1591.579, -152.29793)
            int ui:nodegraph:node:stackingOrder = 2275
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-833.9769, 457.3205)
            int ui:nodegraph:node:stackingOrder = 2742
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial.inputs:Speed>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Modulo.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-684.72626, 416.24182)
            int ui:nodegraph:node:stackingOrder = 2742
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-795.9527, -81.88309)
            int ui:nodegraph:node:stackingOrder = 3690
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/ImageBlockMaterial/UsdUVTexture_1.outputs:r>
            float inputs:in2.connect = </Root/ImageBlockMaterial/UsdUVTexture.outputs:g>
            float inputs:in3.connect = </Root/ImageBlockMaterial/UsdUVTexture_2.outputs:b>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1229.09, -80.34056)
            int ui:nodegraph:node:stackingOrder = 1312
        }

        def Shader "UsdUVTexture"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/ImageBlockMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ImageBlockMaterial/Add.outputs:out>
            string inputs:wrapS = "clamp"
            string inputs:wrapT = "clamp"
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (899.6131, -229.70705)
            int ui:nodegraph:node:stackingOrder = 3760
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/ImageBlockMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ImageBlockMaterial/Texcoord.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (816.5853, -671.155)
            int ui:nodegraph:node:stackingOrder = 3742
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Combine2_2.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Multiply_5.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (533.40656, 393.88205)
            int ui:nodegraph:node:stackingOrder = 3050
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_vector2"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/ImageBlockMaterial/Multiply_9.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (663.32227, 376.18796)
            int ui:nodegraph:node:stackingOrder = 3750
        }

        def Shader "UsdUVTexture_2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            asset inputs:file.connect = </Root/ImageBlockMaterial.inputs:ConstantImageFile>
            color4f inputs:scale
            float2 inputs:st.connect = </Root/ImageBlockMaterial/Subtract.outputs:out>
            string inputs:wrapS = "clamp"
            string inputs:wrapT = "clamp"
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (900.1655, 247.57101)
            int ui:nodegraph:node:stackingOrder = 3766
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba", "outputs:rgba"]
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Combine2_2.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Multiply_6.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (539.0073, 65.89062)
            int ui:nodegraph:node:stackingOrder = 3727
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/ImageBlockMaterial/Multiply_4.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (633.87054, 5.4814773)
            int ui:nodegraph:node:stackingOrder = 3725
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Texcoord.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial.inputs:BlockSize>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-634.4697, 326.35876)
            int ui:nodegraph:node:stackingOrder = 3011
        }

        def Shader "Floor"
        {
            uniform token info:id = "ND_floor_vector2"
            float2 inputs:in.connect = </Root/ImageBlockMaterial/Multiply_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-515.00806, 338.45038)
            int ui:nodegraph:node:stackingOrder = 3736
        }

        def Shader "Floor_1"
        {
            uniform token info:id = "ND_floor_float"
            float inputs:in.connect = </Root/ImageBlockMaterial/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-526.09674, 419.457)
            int ui:nodegraph:node:stackingOrder = 3165
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector2FA"
            float2 inputs:in1.connect = </Root/ImageBlockMaterial/Floor.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Floor_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-404.53256, 375.1645)
            int ui:nodegraph:node:stackingOrder = 3731
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise.outputs:Fractional_out>
            float inputs:in2 = 8
            float outputs:out
            float2 ui:nodegraph:node:pos = (-73.02139, 332.24762)
            int ui:nodegraph:node:stackingOrder = 3241
        }

        def Shader "Power_1"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise.outputs:Fractional_out>
            float inputs:in2 = 3
            float outputs:out
            float2 ui:nodegraph:node:pos = (-72.37117, 414.9259)
            int ui:nodegraph:node:stackingOrder = 3241
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/Power.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Power_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (78.956345, 374.93982)
            int ui:nodegraph:node:stackingOrder = 3241
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise_1.outputs:Fractional_out>
            float inputs:in2 = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (427.79868, 461.8616)
            int ui:nodegraph:node:stackingOrder = 3551
        }

        def Shader "Multiply_6"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise_2.outputs:Fractional_out>
            float inputs:in2 = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (443.65536, 166.59338)
            int ui:nodegraph:node:stackingOrder = 3745
        }

        def Shader "Combine2_2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/ImageBlockMaterial/Multiply_3.outputs:out>
            float inputs:in2.connect = </Root/ImageBlockMaterial/Multiply_3.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (222.49455, 371.44275)
            int ui:nodegraph:node:stackingOrder = 3241
        }

        def Shader "ConstantFloat2"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (13, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-33.887917, 509.24258)
            int ui:nodegraph:node:stackingOrder = 3771
        }

        def Shader "ConstantFloat2_1"
        {
            uniform token info:id = "ND_constant_vector2"
            float2 inputs:value = (7, 1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (19.486012, 97.004684)
            int ui:nodegraph:node:stackingOrder = 3714
        }

        def NodeGraph "RandomNoise"
        {
            float2 inputs:seed (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (82.2493, 15.840637)
                        int stackingOrderInSubgraph = 3846
                    }
                }
            )
            float2 inputs:seed.connect = </Root/ImageBlockMaterial/Multiply_2.outputs:out>
            prepend float outputs:Fractional_out.connect = </Root/ImageBlockMaterial/RandomNoise/Fractional.outputs:out>
            float2 ui:nodegraph:node:pos = (-269.24338, 374.46576)
            int ui:nodegraph:node:stackingOrder = 3758
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1075, 57.5)

            def Shader "Combine2"
            {
                uniform token info:id = "ND_combine2_vector2"
                float inputs:in1 = 17.13
                float inputs:in2 = 3.71
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (86.64514, 99.550476)
                int ui:nodegraph:node:stackingOrder = 3848
            }

            def Shader "Sin"
            {
                uniform token info:id = "ND_sin_float"
                float inputs:in.connect = </Root/ImageBlockMaterial/RandomNoise/DotProduct.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (507.25, 57.5)
                int ui:nodegraph:node:stackingOrder = 3840
            }

            def Shader "DotProduct"
            {
                uniform token info:id = "ND_dotproduct_vector2"
                float2 inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise.inputs:seed>
                float2 inputs:in2.connect = </Root/ImageBlockMaterial/RandomNoise/Combine2.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (306.25, 57.5)
                int ui:nodegraph:node:stackingOrder = 3840
            }

            def Shader "Multiply_10"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/ImageBlockMaterial/RandomNoise/Sin.outputs:out>
                float inputs:in2 = 43758.547
                float outputs:out
                float2 ui:nodegraph:node:pos = (654, 102.08203)
                int ui:nodegraph:node:stackingOrder = 3850
            }

            def Shader "Fractional"
            {
                uniform token info:id = "ND_realitykit_fractional_float"
                float inputs:in.connect = </Root/ImageBlockMaterial/RandomNoise/Multiply_10.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (841, 57.5)
                int ui:nodegraph:node:stackingOrder = 3840
            }
        }

        def "RandomNoise_1" (
            active = true
            instanceable = true
            prepend references = </Root/ImageBlockMaterial/RandomNoise>
        )
        {
            float2 inputs:seed.connect = </Root/ImageBlockMaterial/ConstantFloat2.outputs:out>
            float2 ui:nodegraph:node:pos = (243.78024, 501.40424)
            int ui:nodegraph:node:stackingOrder = 3680
        }

        def "RandomNoise_2" (
            active = true
            instanceable = true
            prepend references = </Root/ImageBlockMaterial/RandomNoise>
        )
        {
            float2 inputs:seed.connect = </Root/ImageBlockMaterial/ConstantFloat2_1.outputs:out>
            float2 ui:nodegraph:node:pos = (265.61414, 103.254776)
            int ui:nodegraph:node:stackingOrder = 3714
        }

        def Shader "Modulo"
        {
            uniform token info:id = "ND_modulo_float"
            float inputs:in1.connect = </Root/ImageBlockMaterial/Time.outputs:out>
            float inputs:in2 = 1000
            float outputs:out
            float2 ui:nodegraph:node:pos = (-712.1252, 477.8873)
            int ui:nodegraph:node:stackingOrder = 3782
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1"]
        }
    }

    def Cube "Cube" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/ImageBlockMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }
}

