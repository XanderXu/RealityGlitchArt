#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.0.500.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Material "RGBSplitMaterialV5"
    {
        token outputs:mtlx:surface.connect = </Root/RGBSplitMaterialV5/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/RGBSplitMaterialV5/UsdPreviewSurface.outputs:surface>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (2703.3682, -159.78508)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 2927

        def Shader "UsdPreviewSurface" (
            active = false
        )
        {
            uniform token info:id = "UsdPreviewSurface"
            token outputs:surface
        }

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            color3f inputs:diffuseColor.connect = </Root/RGBSplitMaterialV5/Combine3.outputs:out>
            float inputs:metallic
            float inputs:roughness
            token outputs:out
            float2 ui:nodegraph:node:pos = (2448.3684, -165.28508)
            int ui:nodegraph:node:stackingOrder = 2927
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Time"
        {
            uniform token info:id = "ND_time_float"
            float outputs:out
            float2 ui:nodegraph:node:pos = (-838.1115, 672.20966)
            int ui:nodegraph:node:stackingOrder = 2443
        }

        def Shader "Speed"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 0.1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-835.9928, 574.7527)
            int ui:nodegraph:node:stackingOrder = 2808
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/RGBSplitMaterialV5/Speed.outputs:out>
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/Time.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-688.86084, 631.131)
            int ui:nodegraph:node:stackingOrder = 2573
        }

        def Shader "Texcoord"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-811.49786, 169.91075)
            int ui:nodegraph:node:stackingOrder = 2891
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/RGBSplitMaterialV5/UsdUVTexture_1.outputs:r>
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/UsdUVTexture.outputs:g>
            float inputs:in3.connect = </Root/RGBSplitMaterialV5/UsdUVTexture_2.outputs:b>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2085.8794, -93.32771)
            int ui:nodegraph:node:stackingOrder = 2927
        }

        def Shader "UsdUVTexture"
        {
            uniform token info:id = "ND_UsdUVTexture"
            asset inputs:file = @number.jpeg@
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV5/Add_1.outputs:out>
            string inputs:wrapS
            string inputs:wrapT
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (1485.3099, 56.741497)
            int ui:nodegraph:node:stackingOrder = 2927
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterialV5/Multiply_8.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1398.6063, -217.71794)
            int ui:nodegraph:node:stackingOrder = 2944
        }

        def Shader "UsdUVTexture_1"
        {
            uniform token info:id = "ND_UsdUVTexture"
            color4f inputs:bias
            color4f inputs:fallback
            asset inputs:file = @number.jpeg@
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV5/Add.outputs:out>
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            color4f outputs:rgba
            float2 ui:nodegraph:node:pos = (1759.6302, -274.06503)
            int ui:nodegraph:node:stackingOrder = 2948
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UsdUVTexture_2"
        {
            uniform token info:id = "ND_UsdUVTexture"
            asset inputs:file = @number.jpeg@
            color4f inputs:scale
            float2 inputs:st.connect = </Root/RGBSplitMaterialV5/Add_2.outputs:out>
            string inputs:wrapS
            float outputs:b
            float outputs:g
            float outputs:r
            color3f outputs:rgb
            float2 ui:nodegraph:node:pos = (1756.955, 234.58386)
            int ui:nodegraph:node:stackingOrder = 2927
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:rgba"]
        }

        def Shader "Intensity"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 3
            float outputs:out
            float2 ui:nodegraph:node:pos = (-838.9021, 434.33136)
            int ui:nodegraph:node:stackingOrder = 2809
        }

        def Shader "Fractional"
        {
            uniform token info:id = "ND_realitykit_fractional_float"
            float inputs:in.connect = </Root/RGBSplitMaterialV5/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-522.83203, 620.1288)
            int ui:nodegraph:node:stackingOrder = 2756
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1.connect = </Root/RGBSplitMaterialV5/Multiply.outputs:out>
            float inputs:in2 = 12.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (-621.1366, 688.2911)
            int ui:nodegraph:node:stackingOrder = 2754
        }

        def Shader "Fractional_1"
        {
            uniform token info:id = "ND_realitykit_fractional_float"
            float inputs:in.connect = </Root/RGBSplitMaterialV5/Divide.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-466.90356, 687.7728)
            int ui:nodegraph:node:stackingOrder = 2754
        }

        def Shader "Combine2"
        {
            uniform token info:id = "ND_combine2_vector2"
            float inputs:in1.connect = </Root/RGBSplitMaterialV5/Fractional.outputs:out>
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/Fractional_1.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (-261.51898, 660.10754)
            int ui:nodegraph:node:stackingOrder = 2727
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterialV5/Multiply_9.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1250.4598, 147.23218)
            int ui:nodegraph:node:stackingOrder = 2942
        }

        def Shader "Add_2"
        {
            uniform token info:id = "ND_add_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Texcoord.outputs:out>
            float2 inputs:in2.connect = </Root/RGBSplitMaterialV5/Multiply_10.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1482.6793, 364.72495)
            int ui:nodegraph:node:stackingOrder = 2945
        }

        def Shader "Separate4_1"
        {
            uniform token info:id = "ND_separate4_color4"
            color4f inputs:in.connect = </Root/RGBSplitMaterialV5/Image_1.outputs:out>
            float outputs:outa
            float outputs:outb
            float outputs:outg
            float outputs:outr
            float2 ui:nodegraph:node:pos = (217.49854, 695.8292)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Combine3_2"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/RGBSplitMaterialV5/Separate4_1.outputs:outr>
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/Separate4_1.outputs:outg>
            float inputs:in3.connect = </Root/RGBSplitMaterialV5/Separate4_1.outputs:outb>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (420.65408, 540.40826)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Power_1"
        {
            uniform token info:id = "ND_power_color3FA"
            prepend color3f inputs:in1.connect = </Root/RGBSplitMaterialV5/Combine3_2.outputs:out>
            float inputs:in2 = 8
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (643.49615, 532.75525)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Remap_1"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/RGBSplitMaterialV5/Separate4_1.outputs:outa>
            float inputs:outhigh
            float inputs:outlow = -1
            float outputs:out
            float2 ui:nodegraph:node:pos = (540.7566, 665.9076)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_color3FA"
            prepend color3f inputs:in1.connect = </Root/RGBSplitMaterialV5/Power_1.outputs:out>
            float inputs:in2 = 3
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/Intensity.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (809.11255, 526.68176)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Multiply_7"
        {
            uniform token info:id = "ND_multiply_color3FA"
            prepend color3f inputs:in1.connect = </Root/RGBSplitMaterialV5/Multiply_4.outputs:out>
            float inputs:in2.connect = </Root/RGBSplitMaterialV5/Remap_1.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (899.8032, 572.9154)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Swizzle"
        {
            uniform token info:id = "ND_swizzle_color3_vector2"
            string inputs:channels = "rg"
            prepend color3f inputs:in.connect = </Root/RGBSplitMaterialV5/Multiply_7.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1024.8281, 532.1185)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Multiply_8"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Swizzle.outputs:out>
            float2 inputs:in2 = (1, -1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1185.0342, 537.02515)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Swizzle_1"
        {
            uniform token info:id = "ND_swizzle_color3_vector2"
            string inputs:channels = "gb"
            color3f inputs:in.connect = </Root/RGBSplitMaterialV5/Multiply_7.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1040.8997, 606.78125)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Multiply_9"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Swizzle_1.outputs:out>
            float2 inputs:in2 = (1, -1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1201.1057, 611.68787)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Swizzle_2"
        {
            uniform token info:id = "ND_swizzle_color3_vector2"
            string inputs:channels = "bg"
            color3f inputs:in.connect = </Root/RGBSplitMaterialV5/Multiply_7.outputs:out>
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1048.5175, 693.3937)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Multiply_10"
        {
            uniform token info:id = "ND_multiply_vector2"
            float2 inputs:in1.connect = </Root/RGBSplitMaterialV5/Swizzle_2.outputs:out>
            float2 inputs:in2 = (1, -1)
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1208.7235, 698.3003)
            int ui:nodegraph:node:stackingOrder = 3078
        }

        def Shader "Image_1"
        {
            uniform token info:id = "ND_image_color4"
            color4f inputs:default
            asset inputs:file = @X-Noise256.png@ (
                colorSpace = "srgb_texture"
            )
            string inputs:filtertype
            float2 inputs:texcoord.connect = </Root/RGBSplitMaterialV5/Combine2.outputs:out>
            string inputs:uaddressmode
            string inputs:vaddressmode
            color4f outputs:out
            float2 ui:nodegraph:node:pos = (-31.646946, 555.9739)
            int ui:nodegraph:node:stackingOrder = 3078
        }
    }
}

